/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Nurse;

import Business.Organization.DoctorOrganization;
import Business.Organization.NurseOrganization;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.Person.Patient;
import Business.UserAccount.UserAccount;
import Business.Validate;

import Business.WorkQueue.HospitalWorkRequest;
import Business.WorkQueue.WorkRequest;
import UserInterface.Receptionist.*;
import java.awt.CardLayout;
import java.awt.Color;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jiya
 */
public class ServeMyWorkRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form BookAppointmentReceptionistJPanel
     */
    JPanel userProcessContainer;
    UserAccount userAccount;
    NurseOrganization organization;
    OrganizationDirectory organizationDirectory;
    public ServeMyWorkRequestJPanel(JPanel userProcessContainer, UserAccount userAccount, NurseOrganization organization, OrganizationDirectory organizationDirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.organization = organization;
        this.organizationDirectory = organizationDirectory;
        ProcessRequestJPanel.setVisible(false);
        txtRoomNumber.setBackground(Color.WHITE);
        populateTable();
    }
 public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)tblNurseWorkRequest.getModel();
        
        model.setRowCount(0);
        
        for(WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
            if(request.getStatus().equals("Cancelled"))
            {
                
            }
            else
            {
                Object[] row = new Object[6];
                row[0] = request;
                row[1] = ((HospitalWorkRequest) request).getRepsender().getEmployee();
                row[2] = ((HospitalWorkRequest) request).getNursereceiver() == null ? null : ((HospitalWorkRequest) request).getNursereceiver().getEmployee();
                row[3] = request.getStatus();
                row[4] = ((HospitalWorkRequest) request).getRoomNumber();
                row[5] = ((HospitalWorkRequest) request).getPatient();

                model.addRow(row);
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        lblswan = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNurseWorkRequest = new javax.swing.JTable();
        btnProcess = new javax.swing.JButton();
        ProcessRequestJPanel = new javax.swing.JPanel();
        lblAddOrganization2 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        lblRoomNumber = new javax.swing.JLabel();
        txtRoomNumber = new javax.swing.JTextField();

        setBackground(new java.awt.Color(0, 153, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Back.png"))); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, 40));

        lblswan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblswan.setForeground(new java.awt.Color(255, 255, 255));
        lblswan.setText("Appointments");
        add(lblswan, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 230, 50));

        tblNurseWorkRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Sender", "Receiver", "Status", "Room Number", "Patient"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblNurseWorkRequest);
        if (tblNurseWorkRequest.getColumnModel().getColumnCount() > 0) {
            tblNurseWorkRequest.getColumnModel().getColumn(0).setPreferredWidth(75);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 870, 200));

        btnProcess.setBackground(new java.awt.Color(255, 102, 102));
        btnProcess.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnProcess.setForeground(new java.awt.Color(255, 255, 255));
        btnProcess.setText("Process");
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });
        add(btnProcess, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 300, 130, -1));

        ProcessRequestJPanel.setOpaque(false);
        ProcessRequestJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblAddOrganization2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblAddOrganization2.setForeground(new java.awt.Color(255, 255, 255));
        lblAddOrganization2.setText("Request Details");
        ProcessRequestJPanel.add(lblAddOrganization2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, 140, -1));

        btnSave.setBackground(new java.awt.Color(255, 102, 102));
        btnSave.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        ProcessRequestJPanel.add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 150, -1, -1));

        lblRoomNumber.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblRoomNumber.setForeground(new java.awt.Color(255, 255, 255));
        lblRoomNumber.setText("<html>Room Number <font color = red>*</font></html>");
        ProcessRequestJPanel.add(lblRoomNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, -1, 30));
        ProcessRequestJPanel.add(txtRoomNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 70, 160, 30));

        add(ProcessRequestJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 340, 500, 240));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout cl = (CardLayout) userProcessContainer.getLayout();
        cl.previous(userProcessContainer);

    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
      int selectedRow = tblNurseWorkRequest.getSelectedRow();
      if (selectedRow < 0){
            return;
        }
         HospitalWorkRequest request = (HospitalWorkRequest)tblNurseWorkRequest.getValueAt(selectedRow, 0);
        Patient patient = (Patient) tblNurseWorkRequest.getValueAt(selectedRow, 5);
        
        String roomNumber = txtRoomNumber.getText().trim();
       
       boolean boolroomNum = Validate.isalphanumeric(roomNumber);
       
       if(!roomNumber.isEmpty())
       {
           if(boolroomNum)
           {
               
               txtRoomNumber.setBackground(Color.WHITE);
               request.setRoomNumber(roomNumber);
               request.setStatus("Room Alloted");
                
               request.setPatient(patient);
               request.setNurseSender(userAccount);
               request.setMessage("Request for Checkup");
               request.setStatus("Room Alloted");
               JOptionPane.showMessageDialog(null,"Room Alloted sucessfully","Success",1);
                       populateTable();
               txtRoomNumber.setText("");
               ProcessRequestJPanel.setVisible(false);
              
              
                Organization org = null;
            for (Organization organization : organizationDirectory.getOrganizationList()){
                if (organization instanceof DoctorOrganization){
                    org = organization;
                    break;
                }
            }
            if (org!=null){
                org.getWorkQueue().getWorkRequestList().add(request);
               // userAccount.getWorkQueue().getWorkRequestList().add(dwr);
                System.out.println("Doctor organization"+org.getWorkQueue().getWorkRequestList().size());
                populateTable();
            }
                }
            
           
           else
           {
               txtRoomNumber.setBackground(Color.red);
               JOptionPane.showMessageDialog(null,"Invalid Data","Error",JOptionPane.ERROR_MESSAGE);
           }
       }
       else
       {
           JOptionPane.showMessageDialog(null,"Fields cannot be empty","Info",1);
       }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblNurseWorkRequest.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null,"Please select any row","Info",1);
            return;
        }
         HospitalWorkRequest request = (HospitalWorkRequest)tblNurseWorkRequest.getValueAt(selectedRow, 0);
        if(request.getRoomNumber() == null)
        {
            ProcessRequestJPanel.setVisible(true);
        }
        else
        {
            ProcessRequestJPanel.setVisible(false);
            JOptionPane.showMessageDialog(null,"Room already allocated","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnProcessActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ProcessRequestJPanel;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnProcess;
    private javax.swing.JButton btnSave;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAddOrganization2;
    private javax.swing.JLabel lblRoomNumber;
    private javax.swing.JLabel lblswan;
    private javax.swing.JTable tblNurseWorkRequest;
    private javax.swing.JTextField txtRoomNumber;
    // End of variables declaration//GEN-END:variables
}
