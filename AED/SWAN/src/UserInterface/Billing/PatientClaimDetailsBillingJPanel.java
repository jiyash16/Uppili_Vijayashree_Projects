/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Billing;

import UserInterface.Nurse.*;
import Business.Claims.Claim;
import Business.Person.Patient;
import Business.PersonInsurance.InsurancePolicy;
import Business.PersonInsurance.InsurancePolicy.InsuranceType;
import Business.Validate;
import Business.WorkQueue.SupportWorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jiya
 */
public class PatientClaimDetailsBillingJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PatientClaimDetailsJPanel
     */
    JPanel userProcessContainer;
    Patient patient;
    SimpleDateFormat sdf,sdf1;
    SupportWorkRequest swr;
    int wfh;
    public PatientClaimDetailsBillingJPanel(JPanel userProcessContainer,SupportWorkRequest swr,int wfh) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        sdf = new SimpleDateFormat("dd/MM/yyyy");
        sdf1 = new SimpleDateFormat("dd/MM/yyyy hh:mm:ss a");
        this.swr = swr;
        this.wfh=wfh;
        this.patient = swr.getPatient();
        populateTable();
        AddClaimPanel.setVisible(false);
        populateInsurance();
    }
    public void populateTable()
    {
         DefaultTableModel model = (DefaultTableModel) tblClaim.getModel();
       
        model.setRowCount(0);
        for(Claim claim : patient.getClaimDirectory().getClaimList())
        {
           
                Object[] row = new Object[4];
                row[0] = claim;
                 row[1] = claim.getInsurancePolicy();
                 row[2] = claim.getClaimAmount();
                 row[3] =sdf.format(claim.getCreatedOn());


                    model.addRow(row);
            }
        
        
    }
    public void populateInsurance()
    {
        cmbInsurance.removeAllItems();
        for(InsurancePolicy ip : patient.getInsurancePolicyDirectory().getInsurancePolicyDirectory())
        {
            if(ip.isIsActive())
            {
                cmbInsurance.addItem(ip);
            }
        }
    }
    public void populateCombo(InsurancePolicy insurance)
    {
        txtInsuranceType.setText(insurance.getInsuranceType().getValue());
         if(txtInsuranceType.getText().equals("Medicare"))
        {
            txtCoPay.setText(String.valueOf(20));
        }
        else if(txtInsuranceType.getText().equals("Medicaid"))
        {
            txtCoPay.setText(String.valueOf(10));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        lblswan = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblClaim = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        AddClaimPanel = new javax.swing.JPanel();
        lblAddOrganization2 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnUpdateSave = new javax.swing.JButton();
        lblCoPay = new javax.swing.JLabel();
        txtCoPay = new javax.swing.JTextField();
        lblOrganizationType = new javax.swing.JLabel();
        lblClaimAmout = new javax.swing.JLabel();
        txtClaimAmount = new javax.swing.JTextField();
        lblDiagonosis = new javax.swing.JLabel();
        txtInsuranceType = new javax.swing.JTextField();
        lblOrganizationType1 = new javax.swing.JLabel();
        cmbInsurance = new javax.swing.JComboBox();
        txtDiagonosis1 = new javax.swing.JTextField();

        setBackground(new java.awt.Color(0, 153, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Back.png"))); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, 40));

        lblswan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblswan.setForeground(new java.awt.Color(255, 255, 255));
        lblswan.setText("Patient Claim Details");
        add(lblswan, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, 230, 50));

        tblClaim.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Claim ID", "Insurance Policy", "Claim Amount", "Created On"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblClaim);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 80, 600, 180));

        btnDelete.setBackground(new java.awt.Color(255, 102, 102));
        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete Claim");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 270, 130, -1));

        btnView.setBackground(new java.awt.Color(255, 102, 102));
        btnView.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnView.setForeground(new java.awt.Color(255, 255, 255));
        btnView.setText("View Claim");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        add(btnView, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 150, -1));

        AddClaimPanel.setOpaque(false);
        AddClaimPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblAddOrganization2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblAddOrganization2.setForeground(new java.awt.Color(255, 255, 255));
        lblAddOrganization2.setText("Claim Details");
        AddClaimPanel.add(lblAddOrganization2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, 140, -1));

        btnUpdate.setBackground(new java.awt.Color(255, 102, 102));
        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Edit");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        AddClaimPanel.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 140, 60, -1));

        btnUpdateSave.setBackground(new java.awt.Color(255, 102, 102));
        btnUpdateSave.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnUpdateSave.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateSave.setText("Save");
        btnUpdateSave.setEnabled(false);
        btnUpdateSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateSaveActionPerformed(evt);
            }
        });
        AddClaimPanel.add(btnUpdateSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 190, -1, -1));

        lblCoPay.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblCoPay.setForeground(new java.awt.Color(255, 255, 255));
        lblCoPay.setText("<html>Co Pay <font color = red>*</font></html>");
        AddClaimPanel.add(lblCoPay, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, -1, 30));

        txtCoPay.setEnabled(false);
        AddClaimPanel.add(txtCoPay, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, 160, 30));

        lblOrganizationType.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblOrganizationType.setForeground(new java.awt.Color(255, 255, 255));
        lblOrganizationType.setText("<html>Insurance Type <font color = red>*</font></html>");
        AddClaimPanel.add(lblOrganizationType, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, -1, -1));

        lblClaimAmout.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblClaimAmout.setForeground(new java.awt.Color(255, 255, 255));
        lblClaimAmout.setText("<html>Claim Amount <font color = red>*</font></html>");
        AddClaimPanel.add(lblClaimAmout, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, -1, 30));

        txtClaimAmount.setEnabled(false);
        AddClaimPanel.add(txtClaimAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 190, 160, 30));

        lblDiagonosis.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblDiagonosis.setForeground(new java.awt.Color(255, 255, 255));
        lblDiagonosis.setText("<html>Diagonosis <font color = red>*</font></html>");
        AddClaimPanel.add(lblDiagonosis, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, -1, 30));

        txtInsuranceType.setEnabled(false);
        AddClaimPanel.add(txtInsuranceType, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 150, 160, 30));

        lblOrganizationType1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblOrganizationType1.setForeground(new java.awt.Color(255, 255, 255));
        lblOrganizationType1.setText("<html>Insurance  <font color = red>*</font></html>");
        AddClaimPanel.add(lblOrganizationType1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, -1, -1));

        cmbInsurance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbInsuranceActionPerformed(evt);
            }
        });
        AddClaimPanel.add(cmbInsurance, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 110, 160, 30));

        txtDiagonosis1.setEnabled(false);
        AddClaimPanel.add(txtDiagonosis1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 70, 160, 30));

        add(AddClaimPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 340, 500, 300));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout cl = (CardLayout) userProcessContainer.getLayout();
        cl.previous(userProcessContainer);

    }//GEN-LAST:event_btnBackActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        btnUpdateSave.setEnabled(true);
        btnUpdate.setEnabled(false);
        txtDiagonosis1.setEnabled(true);
        txtCoPay.setEnabled(true);
        txtClaimAmount.setEnabled(true);
        cmbInsurance.setEnabled(true);
        txtInsuranceType.setEnabled(true);

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnUpdateSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateSaveActionPerformed
        // TODO add your handling code here:
        try
        {
        int selectedRow = tblClaim.getSelectedRow();
        Claim claim = (Claim) tblClaim.getValueAt(selectedRow, 0);
       String claimAmount = txtClaimAmount.getText().trim();
       String Diagonosis = txtDiagonosis1.getText().trim();
        //boolean boolcopay = Validate.isNumeric(organizationLoc);
        boolean boolclaimAmt = Validate.isDouble(claimAmount);
        boolean booldiagonosis = Validate.isalphanumeric(Diagonosis);
        if( !claimAmount.isEmpty() && !Diagonosis.isEmpty() && cmbInsurance.getSelectedItem() !=null )
        {
            if(boolclaimAmt && booldiagonosis)
            {
                Date date  = new Date();
                String date1 = sdf1.format(date);
                txtClaimAmount.setBackground(Color.WHITE);
               txtDiagonosis1.setBackground(Color.WHITE);
                claim.setModifiedOn(date);
                claim.setClaimAmount(Double.parseDouble(claimAmount));
                
                claim.setDiagonosis(Diagonosis);
                  swr.setStatus("Resolved");
                 swr.setResolveDate(sdf1.parse(date1));
                JOptionPane.showMessageDialog(null,"Claim updated succesfully","Succes",1);
                if(wfh==1)
            {
                Validate.createLogFile(swr.getEmployeeReceiver().getUsername(), "Employee updated patient billing details");
            }
                   AddClaimPanel.setVisible(false);
                populateTable();
             
            }
            else
            {

                if(!boolclaimAmt)
                {
                    txtClaimAmount.setBackground(Color.red);
                 }
                else
                    txtClaimAmount.setBackground(Color.WHITE);
                if(!booldiagonosis)
                {
                    txtDiagonosis1.setBackground(Color.red);
                 }
                else
                    txtDiagonosis1.setBackground(Color.WHITE);
                
                JOptionPane.showMessageDialog(null,"Invalid data","Error",JOptionPane.ERROR_MESSAGE);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Fields cannot be empty","Information",JOptionPane.INFORMATION_MESSAGE);

        }
        }
        catch(Exception e)
        {
            
        }
    }//GEN-LAST:event_btnUpdateSaveActionPerformed

    private void cmbInsuranceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbInsuranceActionPerformed
        // TODO add your handling code here:
        InsurancePolicy ip = (InsurancePolicy) cmbInsurance.getSelectedItem();
        if(ip != null)
        {
            populateCombo(ip);
        }
    }//GEN-LAST:event_cmbInsuranceActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed

        int selectedRow = tblClaim.getSelectedRow();
        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(null,"Please select any row","Information",1);
            return;
        }
        Claim c = (Claim) tblClaim.getValueAt(selectedRow, 0);
        AddClaimPanel.setVisible(true);
        
        btnUpdate.setVisible(true);
        btnUpdateSave.setVisible(true);
        btnUpdate.setEnabled(true);
        btnUpdateSave.setEnabled(false);
        populateInsurance();
        txtClaimAmount.setEnabled(false);
        txtCoPay.setEnabled(false);
        txtInsuranceType.setEnabled(false);
        cmbInsurance.setEnabled(false);
        txtInsuranceType.setEnabled(false);
        txtDiagonosis1.setText(c.getDiagonosis());
        txtDiagonosis1.setEnabled(false);
        txtInsuranceType.setText(c.getInsurancePolicy().getInsuranceType().getValue());
        txtClaimAmount.setText(String.valueOf(c.getClaimAmount()));
        cmbInsurance.setSelectedItem(c.getInsurancePolicy());
        
        
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
       Date date = new Date();
       String date1 = sdf1.format(date);
        int selectedRow = tblClaim.getSelectedRow();
        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(null,"Please select any row","Information",1);
            return;
        }
        Claim c = (Claim) tblClaim.getValueAt(selectedRow, 0);
       try
       {
            patient.getClaimDirectory().deleteClaim(c);
            swr.setStatus("Resolved");
            swr.setResolveDate(sdf1.parse(date1));
        JOptionPane.showMessageDialog(null,"Claim deleted successfully","Success",1);
        if(wfh==1)
            {
                Validate.createLogFile(swr.getEmployeeReceiver().getUsername(), "Employee deleted patient claim");
            }
        populateTable();
        AddClaimPanel.setVisible(false);
       }
       catch(Exception e)
       {
           
       }
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddClaimPanel;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdateSave;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox cmbInsurance;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAddOrganization2;
    private javax.swing.JLabel lblClaimAmout;
    private javax.swing.JLabel lblCoPay;
    private javax.swing.JLabel lblDiagonosis;
    private javax.swing.JLabel lblOrganizationType;
    private javax.swing.JLabel lblOrganizationType1;
    private javax.swing.JLabel lblswan;
    private javax.swing.JTable tblClaim;
    private javax.swing.JTextField txtClaimAmount;
    private javax.swing.JTextField txtCoPay;
    private javax.swing.JTextField txtDiagonosis1;
    private javax.swing.JTextField txtInsuranceType;
    // End of variables declaration//GEN-END:variables
}
