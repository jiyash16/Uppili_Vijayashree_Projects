/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.OrganizationAdmin;

import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.PatientOrganization;
import UserInterface.UserAccountManagement.ViewPersonDetailsJPanel;


import Business.Person.Patient;
import Business.Person.PatientDirectory;
import Business.Validate;
import UserInterface.UserAccountManagement.ViewUpdatePersonDetailsJPanel;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jiya
 */
public class ViewPatientDirectorybyAdminJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewPatientDirectoryJPanel
     */
    JPanel userProcessContainer;
    PatientDirectory patientDirectory;
    Enterprise enterprise;
    public ViewPatientDirectorybyAdminJPanel(JPanel userProcessContainer,Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        
        this.enterprise = enterprise;
        populateTable();
    }
    public void populateTable()
    {
        DefaultTableModel model = (DefaultTableModel) tblPatient.getModel();
       
        model.setRowCount(0);
         for(Organization o : enterprise.getOrganizationDirectory().getOrganizationList())
        {
            if(o instanceof PatientOrganization)
            {
                patientDirectory = o.getPatientDirectory();
                for (Patient p: o.getPatientDirectory().getpatientList()){
    
                    Object[] row = new Object[3];
                    row[0] = p.getPatientId();
                    row[1] = p;

                    if(p.isStatus())
                        row[2] = "Active";
                    else
                        row[2] ="InActive";


                    model.addRow(row);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPatient = new javax.swing.JTable();
        btnViewProfile = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtPatientID = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 153, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setText("Patient Directory");
        add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, 230, 50));

        tblPatient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient ID", "Patient Name", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPatient);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 100, 500, 150));

        btnViewProfile.setBackground(new java.awt.Color(255, 102, 102));
        btnViewProfile.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnViewProfile.setForeground(new java.awt.Color(255, 255, 255));
        btnViewProfile.setText("View Profile");
        btnViewProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewProfileActionPerformed(evt);
            }
        });
        add(btnViewProfile, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, 160, -1));

        btnDelete.setBackground(new java.awt.Color(255, 102, 102));
        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete Patient");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 270, 160, -1));

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Back.png"))); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, 40));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Search by Patient ID");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 330, -1, -1));
        add(txtPatientID, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 380, 100, 30));

        btnSearch.setBackground(new java.awt.Color(255, 102, 102));
        btnSearch.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 380, -1, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String patientId = txtPatientID.getText().trim();
        if(patientId.isEmpty())
        {
            populateTable();
        }
        else
        {
            boolean boolpatientId = Validate.isNumeric(patientId);
            if(boolpatientId)
            {
                 DefaultTableModel model = (DefaultTableModel) tblPatient.getModel();

                        model.setRowCount(0);
                 txtPatientID.setBackground(Color.WHITE);
                txtPatientID.setText("");
                for(Patient p : patientDirectory.getpatientList())
                {
                    if(p.getPatientId() == Integer.parseInt(patientId))
                    {
                       

                         Object[] row = new Object[3];
                    row[0] = p.getPatientId();
                    row[1] = p;

                    if(p.isStatus())
                        row[2] = "Active";
                    else
                        row[2] ="InActive";


                    model.addRow(row);
                    }
                }
            }   
            else
            {
                txtPatientID.setBackground(Color.red);
                JOptionPane.showMessageDialog(null,"Invalid data","Error",JOptionPane.ERROR_MESSAGE);
                System.out.println("error num" + JOptionPane.ERROR_MESSAGE);
            }
        }
        
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnViewProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewProfileActionPerformed
        // TODO add your handling code here:
         int selectedrow = tblPatient.getSelectedRow();
        if(selectedrow < 0)
        {
            JOptionPane.showMessageDialog(null,"Please select any row to edit","Information",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        Patient p = (Patient) tblPatient.getValueAt(selectedrow, 1);
        ViewUpdatePersonDetailsJPanel viewPatientdetails = new ViewUpdatePersonDetailsJPanel(userProcessContainer,p,null,"patient","view",0);
        userProcessContainer.add("ViewUpdatePersonDetailsJPanel",viewPatientdetails);
        CardLayout cl = (CardLayout)userProcessContainer.getLayout();
        cl.next(userProcessContainer);
    }//GEN-LAST:event_btnViewProfileActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
         int selectedrow = tblPatient.getSelectedRow();
        if(selectedrow < 0)
        {
            JOptionPane.showMessageDialog(null,"Please select any row to edit","Information",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        Patient p = (Patient) tblPatient.getValueAt(selectedrow, 1);
        patientDirectory.deletePatient(p);
        JOptionPane.showMessageDialog(null,"Patient deleted successfully","Success",1);
        populateTable();
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnViewProfile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblPatient;
    private javax.swing.JTextField txtPatientID;
    // End of variables declaration//GEN-END:variables
}
