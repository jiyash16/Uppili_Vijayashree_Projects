/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import Business.DB4OUtil.DB4OUtil;
import Business.DateUtils;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.IPConfig;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.Validate;
import UserInterface.UserAccountManagement.FirstTimeLoginJPanel;
//import UserInterface.SystemAdmin.WorldMapSWANJPanel;
import UserInterface.UserAccountManagement.ForgetPassWordJPanel;
import UserInterface.UserAccountManagement.PatientSignUpJPanel;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author Jiya
 */
 
public class MainJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainJFrame
     */
    private EcoSystem system;
    private Organization organization;
    SimpleDateFormat sdf;
    
 private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    public MainJFrame() {
        initComponents();
            system = dB4OUtil.retrieveSystem();
            sdf = new SimpleDateFormat("dd/MM/yyyy");
            btnLogout.setEnabled(false);
            txtUserId.setFocusable(true);
            Date date = new Date();
            String date1 = sdf.format(date);
//           // setSize(1000,900);
//           for(UserAccount ua : system.getUserAccountDirectory().getUserAccountDirectory())
//           {
//               if(ua.getUsername().equalsIgnoreCase("sysadmin"))
//               {
//                   try
//                   {
//                    ua.getEmployee().setHireDate(sdf.parse(date1));
//                   }catch(Exception e)
//                   {
//                       
//                   }
//               }
//           }
//           
             CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            
                                userProcessContainer.add("HomePage",new HomePageJPanel(userProcessContainer) );
                               layout.next(userProcessContainer);
//          for(Network nw : system.getNetworkList())
//            {
//                for(Enterprise e : nw.getEnterpriseDirectory().getEnterpriseList())
//                {
//                    for(Organization o : e.getOrganizationDirectory().getOrganizationList())
//                    {
//                       
//                           // o.getWorkQueue().getWorkRequestList().clear();
//                        
//                        if(o instanceof PatientOrganization)
//                        {
//                            
//                        }
//                        else
//                        {
//                        for(UserAccount ua : o.getUserAccountDirectory().getUserAccountDirectory())
//                        {
//                            if(ua.getEmployee() != null)
//                            {
//                                ua.getEmployee().getTimeSheetDirectory().getTimesheetDirectory().clear();
//                            }
//                        }
//                      }
//                    }
//                }
//            }

        
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SplitPane = new javax.swing.JSplitPane();
        LoginJPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblUserId = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        txtUserId = new javax.swing.JTextField();
        btnLogin = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        btnForgetPassword = new javax.swing.JButton();
        txtPassword = new javax.swing.JPasswordField();
        btnSignUp = new javax.swing.JButton();
        userProcessContainer = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        SplitPane.setDividerLocation(150);

        LoginJPanel.setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("SWAN");

        lblUserId.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblUserId.setForeground(new java.awt.Color(255, 255, 255));
        lblUserId.setText("UserId");

        lblPassword.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblPassword.setForeground(new java.awt.Color(255, 255, 255));
        lblPassword.setText("Password");

        btnLogin.setBackground(new java.awt.Color(255, 255, 255));
        btnLogin.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        btnLogout.setBackground(new java.awt.Color(255, 255, 255));
        btnLogout.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        btnForgetPassword.setBackground(new java.awt.Color(0, 102, 102));
        btnForgetPassword.setForeground(new java.awt.Color(255, 255, 255));
        btnForgetPassword.setText("<html><u>Forget Password?</u></html>");
        btnForgetPassword.setActionCommand("Forget Password?");
        btnForgetPassword.setBorder(null);
        btnForgetPassword.setBorderPainted(false);
        btnForgetPassword.setContentAreaFilled(false);
        btnForgetPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnForgetPasswordActionPerformed(evt);
            }
        });

        btnSignUp.setBackground(new java.awt.Color(255, 255, 255));
        btnSignUp.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnSignUp.setText("Sign Up");
        btnSignUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignUpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LoginJPanelLayout = new javax.swing.GroupLayout(LoginJPanel);
        LoginJPanel.setLayout(LoginJPanelLayout);
        LoginJPanelLayout.setHorizontalGroup(
            LoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginJPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnForgetPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(LoginJPanelLayout.createSequentialGroup()
                .addGroup(LoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUserId)
                    .addComponent(lblPassword))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(LoginJPanelLayout.createSequentialGroup()
                .addGroup(LoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPassword)
                    .addComponent(txtUserId, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(LoginJPanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(LoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSignUp, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 39, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginJPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        LoginJPanelLayout.setVerticalGroup(
            LoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginJPanelLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblUserId)
                .addGap(11, 11, 11)
                .addComponent(txtUserId, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblPassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnForgetPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(btnLogin)
                .addGap(18, 18, 18)
                .addComponent(btnLogout)
                .addGap(18, 18, 18)
                .addComponent(btnSignUp)
                .addGap(0, 337, Short.MAX_VALUE))
        );

        SplitPane.setLeftComponent(LoginJPanel);

        userProcessContainer.setBackground(new java.awt.Color(0, 102, 102));
        userProcessContainer.setLayout(new java.awt.CardLayout());
        SplitPane.setRightComponent(userProcessContainer);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SplitPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1279, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SplitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 641, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
         // Get user name
        String userName = txtUserId.getText();
        // Get Password
        char[] passwordCharArray = txtPassword.getPassword();
        String password = String.valueOf(passwordCharArray);

        //Step1: Check in the system user account directory if you have the user
        UserAccount userAccount = system.getUserAccountDirectory().authenticateUser(userName, password);
        Enterprise inEnterprise = null;
        Organization inOrganization = null;
        if (userAccount == null) {
            //Step2: Go inside each network to check each enterprise
            for (Network network : system.getNetworkList()) {
                //Step 2-a: Check against each enterprise
                
                for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                    userAccount = enterprise.getUserAccountDirectory().authenticateUser(userName, password);
                    if (userAccount == null) {
                        //Step3: Check against each organization inside that enterprise
                        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                            userAccount = organization.getUserAccountDirectory().authenticateUser(userName, password);
                            if (userAccount != null) {
                                inEnterprise = enterprise;
                                inOrganization = organization;
                                this.organization = organization;
                                break;
                            }
                        }
                    } else {
                        inEnterprise = enterprise;
                        break;
                    }
                    if (inOrganization != null) {
                        break;
                    }
                }
                if (inEnterprise != null) {
                    break;
                }
            }
        }

        if (userAccount == null) {
            JOptionPane.showMessageDialog(null, "Invalid Credentails!");
            return;
        } else {
            //try
            //{
            //String ip = InetAddress.getLocalHost().getHostAddress();
           
            if(userAccount.getEmployee() != null)
            {
               
                 String ip = JOptionPane.showInputDialog(rootPane, "ip?", null);
                  if(ip !=null && Validate.isIP(ip))
                {
                  //  System.out.println("inside not null");
                  
                    IPConfig ipconfig = system.getRmap().checkIPPresent(ip);
                     
                     if(ipconfig !=null)
                     {
                         if(ipconfig.getWfhDate()!=null)
                         {
                         // System.out.println("ip inside1" + ipconfig.getHomeip()+"-"+ sdf.format(ipconfig.getWfhDate()));
                          if(ipconfig.getHomeip() == 1 && DateUtils.isToday(ipconfig.getWfhDate()))
                          {
                              btnForgetPassword.setEnabled(false);
                                btnLogin.setEnabled(false);
                                btnLogout.setEnabled(true);
                                txtUserId.setEnabled(false);
                                txtPassword.setEnabled(false);
                                btnSignUp.setEnabled(false);
                              JOptionPane.showMessageDialog(null,"You are working from home today");
                              System.out.println("Employee working from home");
                              createLog(userAccount);
                              CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            
                                userProcessContainer.add("workArea",new FirstTimeLoginJPanel(userProcessContainer, userAccount, inOrganization, inEnterprise, system,1) );
                               layout.next(userProcessContainer);
                              
                             //daypresent = true;
                           }
                          else
                          {
                              txtPassword.setText("");
                                txtUserId.setText("");
                              JOptionPane.showMessageDialog(null,"Not authorized to work from home today","Error",JOptionPane.ERROR_MESSAGE);
                          }
                         }
                     else
                         {
                             btnForgetPassword.setEnabled(false);
                             btnLogin.setEnabled(false);
                                btnLogout.setEnabled(true);
                                txtUserId.setEnabled(false);
                                txtPassword.setEnabled(false);
                                btnSignUp.setEnabled(false);
                             CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            
                                userProcessContainer.add("workArea",new FirstTimeLoginJPanel(userProcessContainer, userAccount, inOrganization, inEnterprise, system,0) );
                               layout.next(userProcessContainer);
                         }
                          
                     
                     }
                     else
                     {
                         txtPassword.setText("");
                                txtUserId.setText("");
                         JOptionPane.showMessageDialog(null,"You are not authorized to work from other location","Error",JOptionPane.ERROR_MESSAGE);
                     }
                }
                  else
                  {
                      txtPassword.setText("");
                                txtUserId.setText("");
                      JOptionPane.showMessageDialog(null,"Not valid ip","Error",JOptionPane.ERROR_MESSAGE);
                  }
            }
             else
            {
               btnForgetPassword.setEnabled(false);
                 btnLogin.setEnabled(false);
                                btnLogout.setEnabled(true);
                                txtUserId.setEnabled(false);
                                txtPassword.setEnabled(false);
                                btnSignUp.setEnabled(false);
                
                     CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            
                         userProcessContainer.add("workArea",new FirstTimeLoginJPanel(userProcessContainer, userAccount, inOrganization, inEnterprise, system,0) );
                        layout.next(userProcessContainer);
            }
                
//            }
//            catch(Exception e)
//            {
//                //System.out.println(e);
//            }
            
        }

    }//GEN-LAST:event_btnLoginActionPerformed
public void createLog(UserAccount userAccount)
{
    Validate.createLogFile(userAccount.getUsername(), "Employee working from home");
    
}
    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
         btnLogout.setEnabled(false);
        txtUserId.setEnabled(true);
        txtPassword.setEnabled(true);
        btnLogin.setEnabled(true);
        btnSignUp.setEnabled(true);
        txtUserId.setText("");
        txtPassword.setText("");
        txtUserId.setFocusable(true);
        userProcessContainer.removeAll();
        btnForgetPassword.setEnabled(true);
        userProcessContainer.add("blank", new HomePageJPanel(userProcessContainer));
        CardLayout crdLyt = (CardLayout) userProcessContainer.getLayout();
        crdLyt.next(userProcessContainer);
        dB4OUtil.storeSystem(system);
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnSignUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignUpActionPerformed
        // TODO add your handling code here:
        PatientSignUpJPanel patientSignUp = new PatientSignUpJPanel(userProcessContainer,system);
        userProcessContainer.add("PatientSignUpJPanel",patientSignUp);
        CardLayout cl = (CardLayout)userProcessContainer.getLayout();
        cl.next(userProcessContainer);
    }//GEN-LAST:event_btnSignUpActionPerformed

    private void btnForgetPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnForgetPasswordActionPerformed
        // TODO add your handling code here:
        txtPassword.setText("");
        txtUserId.setText("");
         ForgetPassWordJPanel forgetPasswordpanel = new ForgetPassWordJPanel(userProcessContainer,system);
        userProcessContainer.add("ForgetPassWordJPanel",forgetPasswordpanel);
        CardLayout cl = (CardLayout)userProcessContainer.getLayout();
        cl.next(userProcessContainer);
        
    }//GEN-LAST:event_btnForgetPasswordActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel LoginJPanel;
    private javax.swing.JSplitPane SplitPane;
    private javax.swing.JButton btnForgetPassword;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnSignUp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblUserId;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUserId;
    private javax.swing.JPanel userProcessContainer;
    // End of variables declaration//GEN-END:variables
}
