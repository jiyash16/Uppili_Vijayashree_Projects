/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SystemAdmin;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Person.Employee;
import Business.Role.AdminRole;
import Business.SendMessage.MyOzSmsClient;
import Business.UserAccount.UserAccount;
import Business.Validate;
import java.awt.CardLayout;
import java.awt.Color;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jiya
 */
public class ManageUserAccountJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageUserAccountJPanel
     */
     JPanel userProcessContainer;
     EcoSystem system;
     SimpleDateFormat sdf;
     public ManageUserAccountJPanel(JPanel userProcessContainer,EcoSystem system) {
        initComponents();
       this.userProcessContainer = userProcessContainer;
        this.system = system;
        sdf = new SimpleDateFormat("dd/MM/yyyy");
        AddUserAccountJPanel.setVisible(false);
        populateTable();
        populateNetworkComboBox();
        
    }
    public void populateTable()
    {
        DefaultTableModel model = (DefaultTableModel) tblUserAccount.getModel();

        model.setRowCount(0);
        for (Network network : system.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (UserAccount userAccount : enterprise.getUserAccountDirectory().getUserAccountDirectory()) {
                    Object[] row = new Object[4];
                    row[0] = network;
                    row[1] = enterprise;
                    row[2] = userAccount;
                    if(userAccount.isStatus())
                    row[3] = "Active";
                    else
                    row[3] ="InActive";

                    model.addRow(row);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUserAccount = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnview = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        AddUserAccountJPanel = new javax.swing.JPanel();
        lblUserAccount = new javax.swing.JLabel();
        lblNetworkName = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnUpdateSave = new javax.swing.JButton();
        cmbNetwork = new javax.swing.JComboBox();
        lblNetworkName1 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        lblNetworkName2 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        cmbEnterprise = new javax.swing.JComboBox();
        lblEnterprise = new javax.swing.JLabel();
        lblNetworkName3 = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        lblNetworkName4 = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();

        setBackground(new java.awt.Color(0, 153, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Back.png"))); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, 40));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Manage UserAccount");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, 170, 40));

        tblUserAccount.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Network", "Enterprise", "UserName", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblUserAccount);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(72, 70, 530, 100));

        btnAdd.setBackground(new java.awt.Color(255, 102, 102));
        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("Add User");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 180, 150, -1));

        btnview.setBackground(new java.awt.Color(255, 102, 102));
        btnview.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnview.setForeground(new java.awt.Color(255, 255, 255));
        btnview.setText("View User Details");
        btnview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnviewActionPerformed(evt);
            }
        });
        add(btnview, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 230, -1, -1));

        btnDelete.setBackground(new java.awt.Color(255, 102, 102));
        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Enable/Disable User");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 180, 160, -1));

        AddUserAccountJPanel.setOpaque(false);
        AddUserAccountJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblUserAccount.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblUserAccount.setForeground(new java.awt.Color(255, 255, 255));
        lblUserAccount.setText("User Details");
        AddUserAccountJPanel.add(lblUserAccount, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 20, 110, 30));

        lblNetworkName.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblNetworkName.setForeground(new java.awt.Color(255, 255, 255));
        lblNetworkName.setText("<html>Network Name <font color = red>*</font></html>");
        AddUserAccountJPanel.add(lblNetworkName, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, -1, -1));

        btnSave.setBackground(new java.awt.Color(255, 102, 102));
        btnSave.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        AddUserAccountJPanel.add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 160, -1, -1));

        btnUpdate.setBackground(new java.awt.Color(255, 102, 102));
        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Edit");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        AddUserAccountJPanel.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 140, 60, -1));

        btnUpdateSave.setBackground(new java.awt.Color(255, 102, 102));
        btnUpdateSave.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnUpdateSave.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateSave.setText("Save");
        btnUpdateSave.setEnabled(false);
        btnUpdateSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateSaveActionPerformed(evt);
            }
        });
        AddUserAccountJPanel.add(btnUpdateSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 190, -1, -1));

        cmbNetwork.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbNetworkActionPerformed(evt);
            }
        });
        AddUserAccountJPanel.add(cmbNetwork, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 70, 160, 30));

        lblNetworkName1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblNetworkName1.setForeground(new java.awt.Color(255, 255, 255));
        lblNetworkName1.setText("<html>User Name <font color = red>*</font></html>");
        AddUserAccountJPanel.add(lblNetworkName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, 30));
        AddUserAccountJPanel.add(txtUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 150, 160, 30));

        lblNetworkName2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblNetworkName2.setForeground(new java.awt.Color(255, 255, 255));
        lblNetworkName2.setText("<html>Password <font color = red>*</font></html>");
        AddUserAccountJPanel.add(lblNetworkName2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, -1, 30));

        txtPassword.setEnabled(false);
        AddUserAccountJPanel.add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 190, 160, 30));

        AddUserAccountJPanel.add(cmbEnterprise, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 110, 160, 30));

        lblEnterprise.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblEnterprise.setForeground(new java.awt.Color(255, 255, 255));
        lblEnterprise.setText("<html>Enterprise <font color = red>*</font></html>");
        AddUserAccountJPanel.add(lblEnterprise, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, -1, -1));

        lblNetworkName3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblNetworkName3.setForeground(new java.awt.Color(255, 255, 255));
        lblNetworkName3.setText("<html>First Name <font color = red>*</font></html>");
        AddUserAccountJPanel.add(lblNetworkName3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, -1, 30));
        AddUserAccountJPanel.add(txtFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, 160, 30));

        lblNetworkName4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblNetworkName4.setForeground(new java.awt.Color(255, 255, 255));
        lblNetworkName4.setText("<html>Last Name <font color = red>*</font></html>");
        AddUserAccountJPanel.add(lblNetworkName4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, -1, 30));
        AddUserAccountJPanel.add(txtLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 270, 160, 30));

        add(AddUserAccountJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 300, 510, 300));
    }// </editor-fold>//GEN-END:initComponents
private void populateNetworkComboBox(){
        cmbNetwork.removeAllItems();
        
        for (Network network : system.getNetworkList()){
            cmbNetwork.addItem(network);
        }
    }
    
    private void populateEnterpriseComboBox(Network network){
        cmbEnterprise.removeAllItems();
        
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
            cmbEnterprise.addItem(enterprise);
        }
        
    }
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        AddUserAccountJPanel.setVisible(true);
        txtUsername.setText("");
        txtPassword.setText(generatepassword());
        txtPassword.setEnabled(false);
        txtFirstName.setEnabled(true);
        txtLastName.setEnabled(true);
        txtUsername.setEnabled(true);
        txtFirstName.setText("");
        txtLastName.setText("");
        btnSave.setVisible(true);
        btnSave.setEnabled(true);
        btnUpdate.setVisible(false);
        btnUpdateSave.setVisible(false);
        populateNetworkComboBox();
        cmbEnterprise.setEnabled(true);
        cmbNetwork.setEnabled(true);
        
        

    }//GEN-LAST:event_btnAddActionPerformed
private String generatepassword()
    {
        //String from which characters are picked up by randomizer
         String randomString="ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
         Random random=new Random();
        StringBuilder password =new StringBuilder();
        //for loop to generate Id of length of 5
        for (int loop_var = 0; loop_var < 5; loop_var++) 
        {
            int randIndex1=random.nextInt(randomString.length());
            password.append(randomString.charAt(randIndex1));            
        }
        return password.toString();

    }
    private void btnviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnviewActionPerformed
        // TODO add your handling code here:

        int selectedrow = tblUserAccount.getSelectedRow();
        if(selectedrow < 0)
        {
            JOptionPane.showMessageDialog(null,"Please select any row to edit","Information",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        Network nw = (Network) tblUserAccount.getValueAt(selectedrow, 0);
        Enterprise e = (Enterprise) tblUserAccount.getValueAt(selectedrow, 1);
        //System.out.println("enterprise name" + e);
        UserAccount ua = (UserAccount) tblUserAccount.getValueAt(selectedrow, 2);
        
        AddUserAccountJPanel.setVisible(true);
        txtFirstName.setEnabled(false);
        txtFirstName.setText(ua.getEmployee().getFirstName());
        txtLastName.setEnabled(false);
        txtLastName.setText(ua.getEmployee().getLastName());
        txtPassword.setEnabled(false);
        txtPassword.setText(ua.getPassword());
        txtUsername.setEnabled(false);
        txtUsername.setText(ua.getUsername());
        cmbNetwork.setSelectedItem(nw);
        cmbEnterprise.setSelectedItem(e);
        
        cmbEnterprise.setEnabled(false);
        cmbNetwork.setEnabled(false);
        btnUpdate.setVisible(true);
        btnUpdate.setEnabled(true);
        btnSave.setVisible(false);
        btnUpdateSave.setVisible(true);
        btnUpdateSave.setEnabled(false);

    }//GEN-LAST:event_btnviewActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        AddUserAccountJPanel.setVisible(false);
        int selectedrow = tblUserAccount.getSelectedRow();
        if(selectedrow < 0)
        {
            JOptionPane.showMessageDialog(null,"Please select any row to edit","Information",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        UserAccount ua = (UserAccount) tblUserAccount.getValueAt(selectedrow, 2);
        if(ua.isStatus())
        {
            ua.getEmployee().setStatus(false);
            ua.setStatus(false);
            JOptionPane.showMessageDialog(null,"UserAccount disabled successfully","Success",JOptionPane.INFORMATION_MESSAGE);
        }
        else
        {
            ua.getEmployee().setStatus(true);
            ua.setStatus(true);
            JOptionPane.showMessageDialog(null,"UserAccount enabled successfully","Success",JOptionPane.INFORMATION_MESSAGE);
        }
        populateTable();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        btnUpdate.setVisible(false);
        //Date date = new Date();
        String userName = txtUsername.getText().trim();
        String password = txtPassword.getText().trim();
        String firstName = txtFirstName.getText().trim();
        String lastName = txtLastName.getText().trim();
        boolean booluserName = Validate.isalphanumeric(userName);
        boolean boolfirstName = Validate.isString(firstName);
        boolean boollastName = Validate.isString(lastName);
        boolean uidpresent=false;
        UserAccount userAccount = system.getUserAccountDirectory().searchUserAccountpresent(userName);
        Enterprise inEnterprise = null;
        Organization inOrganization = null;
        if (userAccount == null) {
            //Step2: Go inside each network to check each enterprise
            for (Network network : system.getNetworkList()) {
                //Step 2-a: Check against each enterprise
                
                for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                    userAccount = enterprise.getUserAccountDirectory().searchUserAccountpresent(userName);
                    if (userAccount == null) {
                        //Step3: Check against each organization inside that enterprise
                        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                            userAccount = organization.getUserAccountDirectory().searchUserAccountpresent(userName);
                            if (userAccount != null) {
                                inEnterprise = enterprise;
                                inOrganization = organization;
                               // this.organization = organization;
                                break;
                            }
                        }
                    } else {
                        inEnterprise = enterprise;
                        break;
                    }
                    if (inOrganization != null) {
                        break;
                    }
                }
                if (inEnterprise != null) {
                    break;
                }
            }
        }

        if (userAccount == null) {
           uidpresent = true;
          
        }
        if(!userName.isEmpty() && !firstName.isEmpty() && !lastName.isEmpty() && cmbEnterprise.getSelectedItem() != null && cmbNetwork.getSelectedItem() != null)
        {
            if(booluserName && boolfirstName && boollastName )
            {
                if(uidpresent)
                {
                    Date date = new Date();
                    String hireDate = sdf.format(date);
                        Network nw = (Network) cmbNetwork.getSelectedItem();
                       Enterprise e = (Enterprise) cmbEnterprise.getSelectedItem();
                       Employee employee = e.getEmployeeDirectory().createEmployee();

                       txtFirstName.setBackground(Color.WHITE);
                       txtLastName.setBackground(Color.WHITE);
                       txtUsername.setBackground(Color.WHITE);

                       employee.setFirstName(firstName);
                       employee.setLastName(lastName);
                       try
                       {
                        employee.setHireDate(sdf.parse(hireDate));
                       }catch(Exception exp)
                       {
                           
                       }
                       System.out.println("Temporary userid and Password for "+ firstName + " is :["+userName +"], [ "+password + "]");
                       
                       /* code changes*/
//                         try {
//                        String host = "localhost";
//                        int port = 9500;
//                        String username = "admin";
//                        String smspassword = "abc123";
//                        MyOzSmsClient osc = new MyOzSmsClient(host, port);
//                        osc.login(username, smspassword);
//
//                        
//                        String line = "Hello World";
//
//                        System.out.println("SMS message:");
//                        
//
//                        if(osc.isLoggedIn()) {
//                                osc.sendMessage("+16179915227", line);
//                                osc.logout();
//                        }
//                } catch (IOException | InterruptedException exp) {
//                        System.out.println(exp.toString());
//                        exp.printStackTrace();
//                }
//                       /*code change 
//                         
//                         */
                       UserAccount account = e.getUserAccountDirectory().createUserAccount(userName, password, employee, new AdminRole());

                       JOptionPane.showMessageDialog(null,"User Account created succesfully","Success",JOptionPane.INFORMATION_MESSAGE);
                       txtUsername.setText("");
                       txtPassword.setText("");
                       txtFirstName.setText("");
                       txtLastName.setText("");
                       populateTable();
                       AddUserAccountJPanel.setVisible(false);
                }
                else
                {
                    JOptionPane.showMessageDialog(null,"User id already exist","Information",JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
            }
            else
            {
                if(!booluserName)
                {
                    txtUsername.setBackground(Color.red);

                }
                if(!boolfirstName)
                {
                    txtFirstName.setBackground(Color.red);
                }
                if(!boollastName)
                {
                    txtLastName.setBackground(Color.red);
                }
                JOptionPane.showMessageDialog(null,"Invalid data","Error",JOptionPane.ERROR_MESSAGE);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Fields cannot be empty","Information",JOptionPane.INFORMATION_MESSAGE);

        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        
        btnUpdateSave.setEnabled(true);
        btnUpdate.setEnabled(false);
        txtUsername.setEnabled(false);
        txtPassword.setEnabled(true);
        txtFirstName.setEnabled(true);
        txtLastName.setEnabled(true);
        cmbEnterprise.setEnabled(false);
        cmbNetwork.setEnabled(false);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnUpdateSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateSaveActionPerformed
        // TODO add your handling code here:
        int selectedrow = tblUserAccount.getSelectedRow();
          
        String password = txtPassword.getText().trim();
        String firstName = txtFirstName.getText().trim();
        String lastName = txtLastName.getText().trim();
        
        boolean boolfirstName = Validate.isString(firstName);
        boolean boollastName = Validate.isString(lastName);
        boolean boolpassword = Validate.isalphanumeric(password);
       
        
       
        if(!firstName.isEmpty() && !lastName.isEmpty() && !password.isEmpty() && cmbEnterprise.getSelectedItem() != null && cmbNetwork.getSelectedItem() != null)
        {
            if(boolfirstName && boollastName && boolpassword)
            {
                
                txtFirstName.setBackground(Color.WHITE);
                txtLastName.setBackground(Color.WHITE);
                txtUsername.setBackground(Color.WHITE);
                txtPassword.setBackground(Color.WHITE);
                
                UserAccount ua = (UserAccount) tblUserAccount.getValueAt(selectedrow, 2);
        
                ua.getEmployee().setFirstName(firstName);
                ua.getEmployee().setLastName(lastName);
               
                ua.setPassword(password);
                
                JOptionPane.showMessageDialog(null,"User details updated successfully","Success",JOptionPane.INFORMATION_MESSAGE);
                populateTable();
                AddUserAccountJPanel.setVisible(false);
                
               
            }
            else
            {
                if(!boolpassword)
                {
                    txtPassword.setBackground(Color.red);

                }
                
                if(!boolfirstName)
                {
                    txtFirstName.setBackground(Color.red);
                }
                if(!boollastName)
                {
                    txtLastName.setBackground(Color.red);
                }
                JOptionPane.showMessageDialog(null,"Invalid data","Error",JOptionPane.ERROR_MESSAGE);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Fields cannot be empty","Warning",2);
        }
    }//GEN-LAST:event_btnUpdateSaveActionPerformed

    private void cmbNetworkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbNetworkActionPerformed
        // TODO add your handling code here:
         Network network = (Network) cmbNetwork.getSelectedItem();
        if (network != null){
            populateEnterpriseComboBox(network);
        }
        
    }//GEN-LAST:event_cmbNetworkActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddUserAccountJPanel;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdateSave;
    private javax.swing.JButton btnview;
    private javax.swing.JComboBox cmbEnterprise;
    private javax.swing.JComboBox cmbNetwork;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblEnterprise;
    private javax.swing.JLabel lblNetworkName;
    private javax.swing.JLabel lblNetworkName1;
    private javax.swing.JLabel lblNetworkName2;
    private javax.swing.JLabel lblNetworkName3;
    private javax.swing.JLabel lblNetworkName4;
    private javax.swing.JLabel lblUserAccount;
    private javax.swing.JTable tblUserAccount;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
