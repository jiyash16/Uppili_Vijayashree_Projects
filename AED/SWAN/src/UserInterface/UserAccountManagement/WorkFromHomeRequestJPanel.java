/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.UserAccountManagement;

import Business.DateUtils;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.SupportAdminOrganization;
import Business.UserAccount.UserAccount;
import Business.Validate;
import Business.WorkQueue.WorkFromHomeWorkRequest;
import Business.WorkQueue.WorkRequest;
import com.qt.datapicker.DatePicker;
import java.awt.CardLayout;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author Jiya
 */
public class WorkFromHomeRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form WorkFromHomeRequestJPanel
     */
    JPanel userProcessContainer;
    UserAccount userAccount; 
     Enterprise enterprise;
     SimpleDateFormat sdf,sdfRequestDate;
    public WorkFromHomeRequestJPanel(JPanel userProcessContainer, UserAccount userAccount, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer= userProcessContainer;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
        sdf = new SimpleDateFormat("dd/MM/yyyy");
        sdfRequestDate = new SimpleDateFormat("dd/MM/yyyy hh:mm:ss a");
        AddWFHJPanel.setVisible(false);
        populateTable();
    }
   public void populateTable()
    {
        DefaultTableModel model = (DefaultTableModel) tblWFH.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
           if(request instanceof WorkFromHomeWorkRequest)
           {
            Object[] row = new Object[6];
            row[0] = request.getTicketNumber();
            row[1] = request;
            row[2] = sdf.format(request.getRequestDate());
            row[3] = sdf.format(((WorkFromHomeWorkRequest) request).getWfhDate());
            row[4] = ((WorkFromHomeWorkRequest) request).getAdminApprovalStatus() == null ? "Pending" :((WorkFromHomeWorkRequest) request).getAdminApprovalStatus() ;
            row[5] = ((WorkFromHomeWorkRequest) request).getSocApprovalStatus() == null ? "Pending" :((WorkFromHomeWorkRequest) request).getSocApprovalStatus() ;
          
           
           
           
            model.addRow(row);
           }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        lblswan = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblWFH = new javax.swing.JTable();
        btnCancel = new javax.swing.JButton();
        tbnView = new javax.swing.JButton();
        AddWFHJPanel = new javax.swing.JPanel();
        lblWFH = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        lblPolicyNumber = new javax.swing.JLabel();
        txtReason = new javax.swing.JTextField();
        lblPolicyNumber1 = new javax.swing.JLabel();
        txtIP = new javax.swing.JTextField();
        lblWFHDate = new javax.swing.JLabel();
        txtWFHDate = new ObservingTextField();
        btnDatePicker = new javax.swing.JButton();
        lblPolicyNumber2 = new javax.swing.JLabel();
        txtDuration = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        tbnAdd1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 153, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Back.png"))); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, 40));

        lblswan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblswan.setForeground(new java.awt.Color(255, 255, 255));
        lblswan.setText("Work From Home Request");
        add(lblswan, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, 230, 50));

        tblWFH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ticket Number", "Message", "Requested Date", "WFH Date", "Admin Approval Status", "SOC Approval Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblWFH);
        if (tblWFH.getColumnModel().getColumnCount() > 0) {
            tblWFH.getColumnModel().getColumn(0).setPreferredWidth(25);
            tblWFH.getColumnModel().getColumn(2).setPreferredWidth(50);
            tblWFH.getColumnModel().getColumn(3).setPreferredWidth(50);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 720, 130));

        btnCancel.setBackground(new java.awt.Color(255, 102, 102));
        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnCancel.setText("Cancel Ticket");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 210, 120, -1));

        tbnView.setBackground(new java.awt.Color(255, 102, 102));
        tbnView.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tbnView.setForeground(new java.awt.Color(255, 255, 255));
        tbnView.setText("View Ticket");
        tbnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbnViewActionPerformed(evt);
            }
        });
        add(tbnView, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 230, 120, -1));

        AddWFHJPanel.setOpaque(false);
        AddWFHJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblWFH.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblWFH.setForeground(new java.awt.Color(255, 255, 255));
        lblWFH.setText("WFH Details");
        AddWFHJPanel.add(lblWFH, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, 140, -1));

        btnSave.setBackground(new java.awt.Color(255, 102, 102));
        btnSave.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        AddWFHJPanel.add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 270, -1, -1));

        lblPolicyNumber.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblPolicyNumber.setForeground(new java.awt.Color(255, 255, 255));
        lblPolicyNumber.setText("<html>WFH Reason <font color = red>*</font></html>");
        AddWFHJPanel.add(lblPolicyNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, -1, 30));

        txtReason.setEnabled(false);
        AddWFHJPanel.add(txtReason, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 70, 160, 30));

        lblPolicyNumber1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblPolicyNumber1.setForeground(new java.awt.Color(255, 255, 255));
        lblPolicyNumber1.setText("<html>ip Address <font color = red>*</font></html>");
        AddWFHJPanel.add(lblPolicyNumber1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, -1, 30));

        txtIP.setEnabled(false);
        AddWFHJPanel.add(txtIP, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 110, 160, 30));

        lblWFHDate.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblWFHDate.setForeground(new java.awt.Color(255, 255, 255));
        lblWFHDate.setText("<html>Work From Home Date <font color = red>*</font></html>");
        AddWFHJPanel.add(lblWFHDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, 30));

        txtWFHDate.setEnabled(false);
        AddWFHJPanel.add(txtWFHDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 150, 160, 30));

        btnDatePicker.setBackground(new java.awt.Color(255, 102, 102));
        btnDatePicker.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnDatePicker.setForeground(new java.awt.Color(255, 255, 255));
        btnDatePicker.setText("Pick Date");
        btnDatePicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDatePickerActionPerformed(evt);
            }
        });
        AddWFHJPanel.add(btnDatePicker, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 150, -1, 30));

        lblPolicyNumber2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblPolicyNumber2.setForeground(new java.awt.Color(255, 255, 255));
        lblPolicyNumber2.setText("<html>Duration <font color = red>*</font></html>");
        AddWFHJPanel.add(lblPolicyNumber2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 190, -1, 30));

        txtDuration.setEnabled(false);
        AddWFHJPanel.add(txtDuration, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 190, 160, 30));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("hours");
        AddWFHJPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 200, -1, -1));

        add(AddWFHJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 290, 500, 310));

        tbnAdd1.setBackground(new java.awt.Color(255, 102, 102));
        tbnAdd1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tbnAdd1.setForeground(new java.awt.Color(255, 255, 255));
        tbnAdd1.setText("New Ticket");
        tbnAdd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbnAdd1ActionPerformed(evt);
            }
        });
        add(tbnAdd1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 120, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout cl = (CardLayout) userProcessContainer.getLayout();
        cl.previous(userProcessContainer);

    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        try
        {
        String reason = txtReason.getText().trim();
        String ip = txtIP.getText().trim();
        String duration = txtDuration.getText().trim();
        String wfhDate = txtWFHDate.getText().trim();
        Date date = new Date();
        String requestedDate = sdfRequestDate.format(date);
        boolean boolreason = Validate.isalphanumeric(reason);
        boolean boolip = Validate.isIP(ip);
        boolean boolduration = Validate.isNumeric(duration);
    
      

        if(!reason.isEmpty() && !ip.isEmpty() && !duration.isEmpty() && !wfhDate.isEmpty())
        {
               if(!DateUtils.isAfterDay(sdf.parse(wfhDate), date))
                {
                   JOptionPane.showMessageDialog(null,"Work from home date should not be past date","Warning",2);
                    return;

                }
            if(boolreason && boolip && boolduration )
            {
                
                txtReason.setBackground(Color.WHITE);
                txtDuration.setBackground(Color.WHITE);
                txtIP.setBackground(Color.WHITE);
                txtWFHDate.setBackground(Color.WHITE);

                WorkFromHomeWorkRequest wfh = new WorkFromHomeWorkRequest();
                wfh.setMessage(reason);
                wfh.setDuration(Integer.parseInt(duration));
                wfh.setIp(ip);
                wfh.setSender(userAccount);
                wfh.setWfhDate(sdf.parse(wfhDate));
                wfh.setRequestDate(sdf.parse(requestedDate));
                wfh.setRequest("Work from home");
                wfh.setStatus("Pending");
                
                JOptionPane.showMessageDialog(null,"Request raised","Info",1);

                AddWFHJPanel.setVisible(false);

                Organization org = null;
                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
                    if (organization instanceof SupportAdminOrganization){
                        org = organization;
                        break;
                    }
                }
                if (org!=null){
                    org.getWorkQueue().getWorkRequestList().add(wfh);
                   

                    userAccount.getWorkQueue().getWorkRequestList().add(wfh);
                    populateTable();
                }
            }
            else
            {
                if(!boolreason)
                {
                    txtReason.setBackground(Color.red);
                }
                else
                txtReason.setBackground(Color.WHITE);
                 if(!boolduration)
                {
                    txtDuration.setBackground(Color.red);
                }
                else
                txtDuration.setBackground(Color.WHITE);
                if(!boolip)
                {
                    txtIP.setBackground(Color.red);
                }
                else
                txtIP.setBackground(Color.WHITE);
                
                JOptionPane.showMessageDialog(null,"Invalid data","Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Fields cannot be empty","Info",1);
        }
        }
        catch(Exception e)
        {
            
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDatePickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDatePickerActionPerformed
       try
       {
        String lang = null;
        Date date = new Date();
        final Locale locale = getLocale(lang);
        DatePicker dp = new DatePicker(txtWFHDate, locale);
        //DatePicker.getDatePicker().setMaxDate(new Date());
        Date selectedDate = dp.parseDate(txtWFHDate.getText().trim());
        dp.setSelectedDate(selectedDate);
        dp.start(txtWFHDate);
        
       }
       catch(Exception e)
       {
           System.out.println("error");
       }

    }//GEN-LAST:event_btnDatePickerActionPerformed
 private Locale getLocale(String lang) {
     
     if(lang !=null && lang.length() >0)
     {
         return new Locale(lang);
     }
     else
     {
         
             return Locale.US;
     }
    }
    private void tbnAdd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbnAdd1ActionPerformed
        // TODO add your handling code here:
        AddWFHJPanel.setVisible(true);
        txtDuration.setEnabled(true);
        btnSave.setVisible(true);
        btnDatePicker.setEnabled(true);
        txtIP.setEnabled(true);
        txtReason.setEnabled(true);
        txtDuration.setText("");
        txtIP.setText("");
        txtReason.setText("");
        txtWFHDate.setText("");
    }//GEN-LAST:event_tbnAdd1ActionPerformed

    private void tbnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbnViewActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblWFH.getSelectedRow();
        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(null,"Please select any row","Info",1);
            return;
        }
        WorkFromHomeWorkRequest wfh = (WorkFromHomeWorkRequest) tblWFH.getValueAt(selectedRow, 1);
          AddWFHJPanel.setVisible(true);
        txtDuration.setText(String.valueOf(wfh.getDuration()));
        txtIP.setText(wfh.getIp());
        txtReason.setText(wfh.getMessage());
        txtWFHDate.setText(sdf.format(wfh.getWfhDate()));
        btnDatePicker.setVisible(false);
        btnSave.setVisible(false);
        txtDuration.setEnabled(false);
        txtIP.setEnabled(false);
        txtReason.setEnabled(false);
        
    }//GEN-LAST:event_tbnViewActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblWFH.getSelectedRow();
        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(null,"Please select any row","Info",1);
            return;
        }
        WorkFromHomeWorkRequest wfh = (WorkFromHomeWorkRequest) tblWFH.getValueAt(selectedRow, 1);
        if(wfh.getStatus().equalsIgnoreCase("Pending"))
        {
            wfh.setStatus("Cancelled");
            wfh.setAdminApprovalStatus("Cancelled");
            wfh.setSocApprovalStatus("Cancelled");
             JOptionPane.showMessageDialog(null,"Request Cancelled successfully");
             populateTable();
        }
        else
        {
             JOptionPane.showMessageDialog(null,"Request already processed");
        }
       
        
    }//GEN-LAST:event_btnCancelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddWFHJPanel;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDatePicker;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPolicyNumber;
    private javax.swing.JLabel lblPolicyNumber1;
    private javax.swing.JLabel lblPolicyNumber2;
    private javax.swing.JLabel lblWFH;
    private javax.swing.JLabel lblWFHDate;
    private javax.swing.JLabel lblswan;
    private javax.swing.JTable tblWFH;
    private javax.swing.JButton tbnAdd1;
    private javax.swing.JButton tbnView;
    private javax.swing.JTextField txtDuration;
    private javax.swing.JTextField txtIP;
    private javax.swing.JTextField txtReason;
    private ObservingTextField txtWFHDate;
    /*
    private javax.swing.JTextField txtWFHDate;
    */
    // End of variables declaration//GEN-END:variables
}
