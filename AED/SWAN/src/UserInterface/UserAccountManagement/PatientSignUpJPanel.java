/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.UserAccountManagement;


import Business.DateUtils;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.AdminOrganization;
import Business.Organization.Organization;
import Business.Validate;
import Business.WorkQueue.PatientWorkRequest;
import UserInterface.HomePageJPanel;
import com.qt.datapicker.DatePicker;
import java.awt.CardLayout;
import java.awt.Color;
import java.net.InetAddress;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;

import javax.swing.JPanel;



/**
 *
 * @author Jiya
 */
public class PatientSignUpJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SignUpJPanel
     */
    JPanel userProcessContainer;
    
    SimpleDateFormat sdf;
    EcoSystem system;
    public PatientSignUpJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
       sdf = new SimpleDateFormat("dd/MM/yyyy");
       
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblswan = new javax.swing.JLabel();
        lblPhone = new javax.swing.JLabel();
        lblFirstName1 = new javax.swing.JLabel();
        lblFirstName2 = new javax.swing.JLabel();
        lblFirstName4 = new javax.swing.JLabel();
        btnRegister = new javax.swing.JButton();
        txtFirstName = new javax.swing.JTextField();
        txtDOB = new ObservingTextField();
        txtPhone = new javax.swing.JTextField();
        txtLastName1 = new javax.swing.JTextField();
        btnDatePicker = new javax.swing.JButton();
        lblssn = new javax.swing.JLabel();
        txtSSN = new javax.swing.JTextField();

        setBackground(new java.awt.Color(0, 153, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblswan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblswan.setForeground(new java.awt.Color(255, 255, 255));
        lblswan.setText("Welcome To SWAN Network");
        add(lblswan, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, 230, 50));

        lblPhone.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblPhone.setForeground(new java.awt.Color(255, 255, 255));
        lblPhone.setText("<html>Phone <font color = red>*</font></html>");
        add(lblPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 230, -1, 20));

        lblFirstName1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblFirstName1.setForeground(new java.awt.Color(255, 255, 255));
        lblFirstName1.setText("<html>First Name <font color = red>*</font></html>");
        add(lblFirstName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 110, -1, -1));

        lblFirstName2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblFirstName2.setForeground(new java.awt.Color(255, 255, 255));
        lblFirstName2.setText("<html>Last Name <font color = red>*</font></html>");
        add(lblFirstName2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 150, -1, -1));

        lblFirstName4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblFirstName4.setForeground(new java.awt.Color(255, 255, 255));
        lblFirstName4.setText("<html>Date of Birth <font color = red>*</font></html>");
        add(lblFirstName4, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 190, -1, 20));

        btnRegister.setBackground(new java.awt.Color(255, 102, 102));
        btnRegister.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnRegister.setForeground(new java.awt.Color(255, 255, 255));
        btnRegister.setText("Register");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });
        add(btnRegister, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 390, -1, -1));
        add(txtFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 110, 140, 30));

        txtDOB.setEnabled(false);
        add(txtDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 190, 140, 30));
        add(txtPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 230, 140, 30));
        add(txtLastName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 150, 140, 30));

        btnDatePicker.setBackground(new java.awt.Color(255, 102, 102));
        btnDatePicker.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnDatePicker.setForeground(new java.awt.Color(255, 255, 255));
        btnDatePicker.setText("Pick Date");
        btnDatePicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDatePickerActionPerformed(evt);
            }
        });
        add(btnDatePicker, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 190, -1, 30));

        lblssn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblssn.setForeground(new java.awt.Color(255, 255, 255));
        lblssn.setText("<html>SSN <font color = red>*</font></html>");
        add(lblssn, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 270, -1, 30));
        add(txtSSN, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 270, 140, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        // TODO add your handling code here:
       // SmsSender sms = new SmsSender();
       try
       {
           Date date = new Date();
            String firstName = txtFirstName.getText().trim();
            String lastName = txtLastName1.getText().trim();
            String dob = txtDOB.getText().trim();
           
            String phone = txtPhone.getText().trim();
            
           
            String ssn = txtSSN.getText().trim();

            boolean boolfirstName = Validate.isString(firstName);
            boolean boollastName = Validate.isalphanumeric(lastName);
            boolean booldob = Validate.isDate(dob);
            
           
            boolean boolphone = Validate.isPhone(phone);
            boolean booladdress = true;
            

            boolean boolssn = Validate.isSSN(ssn);
       
            if(!firstName.isEmpty() && !lastName.isEmpty() && !dob.isEmpty() && !phone.isEmpty() &&!ssn.isEmpty())
            {
                      if(DateUtils.isAfterDay(sdf.parse(dob), date))
                    {
                       JOptionPane.showMessageDialog(null,"Date of Birth should not be future date","Warning",2);
                        return;

                    }
                if(boolfirstName && boollastName && booldob &&  boolphone && booladdress  && boolssn )
                {
                    txtFirstName.setBackground(Color.WHITE);
                    txtLastName1.setBackground(Color.WHITE);
                        txtDOB.setBackground(Color.WHITE);
                        txtPhone.setBackground(Color.WHITE);
                    
                        txtPhone.setBackground(Color.WHITE);
                       
                        txtSSN.setBackground(Color.WHITE);
                    
                         PatientWorkRequest request = new PatientWorkRequest();
                        request.setMessage("Request for Registration");
                        request.setSender(null);
                        request.setStatus("Pending Approval");
                        request.setDOB(sdf.parse(dob));
                        request.setFirstName(firstName);
                        request.setLastName(lastName);
                        InetAddress IP = InetAddress.getLocalHost();
                      //  System.out.println("IP Address:"+ IP.getHostAddress());
                        request.setIpAddress(IP.getHostAddress());
                        request.setPhone(Long.parseLong(phone));
                        request.setSsn(ssn);
                        
        Organization org = null;
        for (Network nw : system.getNetworkList()){
            for(Enterprise e : nw.getEnterpriseDirectory().getEnterpriseList())
            {
                for(Organization o : e.getOrganizationDirectory().getOrganizationList())
                {
                   // System.out.println("Organization names" + o.getName());
                    if (o instanceof AdminOrganization){
                         org = o;
                          break;
                    }
                }
            }
            
        }
        if (org!=null){
           // System.out.println("request aaded");
            org.getWorkQueue().getWorkRequestList().add(request);
            //System.out.println("Organization in start"+org);
            //System.out.println("request length" + org.getWorkQueue().getWorkRequestList().size());
            //userAccount.getWorkQueue().getWorkRequestList().add(request);
                  JOptionPane.showMessageDialog(null,"Request sent successfully","Success",1);
          
                   txtDOB.setText("");
                     txtPhone.setText("");
                     txtFirstName.setText("");
                     txtLastName1.setText("");
                   
                     txtPhone.setText("");
                     txtSSN.setText("");
          
                     userProcessContainer.removeAll();
        
        userProcessContainer.add("blank", new HomePageJPanel(userProcessContainer));
        CardLayout crdLyt = (CardLayout) userProcessContainer.getLayout();
        crdLyt.next(userProcessContainer);
        
                        
        }
                    
                }
                else
                {
                    if(!boolfirstName)
                    {
                        txtFirstName.setBackground(Color.red);
                    }
                    else
                        txtFirstName.setBackground(Color.WHITE);
                    if(!boollastName)
                    {
                        txtLastName1.setBackground(Color.red);
                    }
                    else
                        txtLastName1.setBackground(Color.WHITE);
                    if(!booldob)
                    {
                        txtDOB.setBackground(Color.red);
                    }
                    else
                        txtDOB.setBackground(Color.WHITE);
                    if(!boolphone)
                        txtPhone.setBackground(Color.red);
                    else
                        txtPhone.setBackground(Color.WHITE);
                    if(!boolphone)
                    {
                        txtPhone.setBackground(Color.red);
                    }
                    else
                        txtPhone.setBackground(Color.WHITE);
                    
                    if(!boolssn)
                    {
                        txtSSN.setBackground(Color.red);
                    }
                    else
                        txtSSN.setBackground(Color.WHITE);

                    JOptionPane.showMessageDialog(null,"Invalid data","Error", JOptionPane.ERROR_MESSAGE);
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Fields cannot be empty","Information",1);
            }
       }
       catch(Exception e)
       {
           System.out.println("Error in date conversion");
                   
       }
       
    }//GEN-LAST:event_btnRegisterActionPerformed

    private void btnDatePickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDatePickerActionPerformed
     String lang = null;
     final Locale locale = getLocale(lang);
     DatePicker dp = new DatePicker(txtDOB, locale);
     //DatePicker.getDatePicker().setMaxDate(new Date());
     Date selectedDate = dp.parseDate(txtDOB.getText().trim());
     dp.setSelectedDate(selectedDate);
     dp.start(txtDOB);
     
    }//GEN-LAST:event_btnDatePickerActionPerformed
    private Locale getLocale(String lang) {
     
     if(lang !=null && lang.length() >0)
     {
         return new Locale(lang);
     }
     else
     {
         
             return Locale.US;
     }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDatePicker;
    private javax.swing.JButton btnRegister;
    private javax.swing.JLabel lblFirstName1;
    private javax.swing.JLabel lblFirstName2;
    private javax.swing.JLabel lblFirstName4;
    private javax.swing.JLabel lblPhone;
    private javax.swing.JLabel lblssn;
    private javax.swing.JLabel lblswan;
    private ObservingTextField txtDOB;
    /*
    private javax.swing.JTextField txtDOB;
    */
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName1;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtSSN;
    // End of variables declaration//GEN-END:variables

   
}
